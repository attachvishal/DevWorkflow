package com.united.sample.drools;

import java.util.LinkedList;
import java.util.ArrayList;
import com.united.entity.*;
import java.util.List;
import com.united.result.*;
import java.util.stream.Collectors;

rule "Matching Flight Segment check"
no-loop true
lock-on-active true
salience 90
dialect "java"
when
    $status :RuleResponse()
        /**
            New PNRGroup
        */
     $pnrNew:PNRGroup(pnrType == "NEW")
     $NEW_FlightSegment_LIST : LinkedList(size >= 1) from collect ( FlightSegment() from $pnrNew.flightSegments)
    /**
      OLD PNRGroup
    */
    $pnrOld: PNRGroup(this != $pnrNew,$OLD_FlightSegment_LIST :flightSegments, pnrType == "OLD")
    $COMMON_FlightSegment_LIST : LinkedList(size >= 0) from collect (FlightSegment(this memberOf $NEW_FlightSegment_LIST) from $pnrOld.flightSegments)
then

       //System.out.println(">>> " + $NEW_FlightSegment_LIST);
       //System.out.println(">>> " + $OLD_FlightSegment_LIST);
       System.out.println("Matching Flight Segment executed");
       ArrayList<Passenger> oldFlightSegmentList = new ArrayList<Passenger>($OLD_FlightSegment_LIST);
       oldFlightSegmentList.removeAll($COMMON_FlightSegment_LIST);
       $status.setRemovedFlightSegmentList(oldFlightSegmentList);

       ArrayList<Passenger> newFlightSegmentList = new ArrayList<Passenger>($NEW_FlightSegment_LIST);
       newFlightSegmentList.removeAll($COMMON_FlightSegment_LIST);
       $status.setAddedFlightSegmentList(newFlightSegmentList);
end